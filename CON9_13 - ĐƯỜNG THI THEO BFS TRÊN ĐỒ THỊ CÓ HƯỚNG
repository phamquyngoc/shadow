#include<bits/stdc++.h>
using namespace std;
int n,m,s,t;
bool visited[100];
int parent[100];
vector<int> a[100];
void bfs(int u){
	queue<int> q;
	q.push(u);
	visited[u] = true;
	while(!q.empty()){
		int v=q.front();
		q.pop();
		for(int x:a[v]){
			if(!visited[x]){
				q.push(x);
				visited[x]=true;
				parent[x]=v;
			}
		}
	}
}
void duongdi(int s,int t){
	memset(visited,false,sizeof(visited));
	bfs(s);
	if(!visited[t]) cout<<"-1";
	else{
		vector<int> path;
		while(t!=s){
			path.push_back(t);
			t=parent[t];
		}path.push_back(s);
		reverse(path.begin(),path.end());
		for(int i:path){
			cout<<i<<" ";
		}
	}
}
int main(){
	int tc;
	cin>>tc;
	while(tc--){
		cin>>n>>m>>s>>t;
		for(int i=1;i<=m;i++){
			int x,y;
			cin>>x>>y;
			a[x].push_back(y);
			//a[y].push_back(x);
		}
		duongdi(s,t);
		cout<<endl;
	}
}
